
/* Targeting all elements of the HTML doc for uniformity (and because I really don't plan on spending too much time stylizing this project if im being honest) */
*, *::before, *::after {
    box-sizing: border-box;
    font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;
}
/* Declared variables for switching background color between right and incorrect answers */
/* Also I'm experimenting with hsl and rgb instead of just hex codes to get more used to different CSS elements. */

:root{
    --hue-neutral: 200;
    --hue-incorrect: 0;
    --hue-correct: 145;
}

/* CSS similairities between correct and incorrect choices */
body {
    --hue: var(--hue-neutral);
    padding: 0;
    margin: 0;
    display: flex;
    width: 100vw;
    height: 100vh;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    background-color: hsl(var(--hue), 100%, 40%);
}

header {
    border: 5px black;
    background-color: rgb(255, 255, 255);
    height: 10vh;
    width: 800px;
    max-width: 80%;
    text-align: center;
    box-shadow: 0 0 15px 2px;
    
}

#score-form {

    font-size: 1rem;
    justify-content: center;
    align-items: center;
}

/* A green display when a correct choice is made, body will be altered by js */
body.correct {
    --hue: var(--hue-correct);
}

/* A red display when an incorrect choice is made, body will be altered by js */
body.incorrect {
    --hue: var(--hue-incorrect);
}

.container {
    width: 800px;
    max-width: 80%;
    background-color: rgb(255, 255, 255);
    border-radius: 5px;
    padding: 10px;
    box-shadow: 0 0 15px 2px;
}


/* stylizing button grid */
.btn-grid {
    display: grid;
    grid-template-columns: repeat(2, auto);
    gap: 10px;
    margin: 20px 0;
}

.btn {
    --hue: var(--hue-neutral);
    border: 1px solid hsl(var(--hue), 100%, 30%);
    background-color: hsl(var(--hue), 100%, 70%);
    border-radius: 5px;
    padding: 5px 10px;
    color: rgb(255, 255, 255);
    outline: none;
}

/* Gives a sense of animation, better user response and knowing which answer they are hovering over */
.btn:hover {
    border-color: rgb(0, 0, 0);
    border: 2px solid hsl(var(--hue), 100%, 30%);
}

/*  */
.btn.correct {
    --hue: var(--hue-correct);
    color:rgb(0, 0, 0);
}

.btn.incorrect {
    --hue: var(--hue-incorrect);
    color:rgb(0, 0, 0);
}

.start-btn, .next-btn {
    font-size: 1.5rem;
    font-weight: bold;
    padding: 10px 20px;
}

/* Flex display for the start and next buttons, assuring that the buttons are always in the center */
.controls {
    display: flex;
    justify-content: center;
    align-items: center;
}

.hide {
    display: none;
}


#neutral-span {
    color: hsl(var(--hue-neutral), 100%, 30%);
    text-decoration: solid;
}

#incorrect-span {
    color: hsl(var(--hue-incorrect), 100%, 30%);
    text-decoration: solid;
}

#score-span {
    color: hsl(var(--hue-correct), 100%, 30%);
    text-decoration: solid;
}

#stored-scores {
    font-size: 1rem;
    text-align: center;
}